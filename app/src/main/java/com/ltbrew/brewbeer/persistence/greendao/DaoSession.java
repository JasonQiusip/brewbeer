package com.ltbrew.brewbeer.persistence.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.ltbrew.brewbeer.persistence.greendao.DBRecipe;
import com.ltbrew.brewbeer.persistence.greendao.DBBrewStep;
import com.ltbrew.brewbeer.persistence.greendao.DBSlot;
import com.ltbrew.brewbeer.persistence.greendao.DBBrewHistory;

import com.ltbrew.brewbeer.persistence.greendao.DBRecipeDao;
import com.ltbrew.brewbeer.persistence.greendao.DBBrewStepDao;
import com.ltbrew.brewbeer.persistence.greendao.DBSlotDao;
import com.ltbrew.brewbeer.persistence.greendao.DBBrewHistoryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dBRecipeDaoConfig;
    private final DaoConfig dBBrewStepDaoConfig;
    private final DaoConfig dBSlotDaoConfig;
    private final DaoConfig dBBrewHistoryDaoConfig;

    private final DBRecipeDao dBRecipeDao;
    private final DBBrewStepDao dBBrewStepDao;
    private final DBSlotDao dBSlotDao;
    private final DBBrewHistoryDao dBBrewHistoryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dBRecipeDaoConfig = daoConfigMap.get(DBRecipeDao.class).clone();
        dBRecipeDaoConfig.initIdentityScope(type);

        dBBrewStepDaoConfig = daoConfigMap.get(DBBrewStepDao.class).clone();
        dBBrewStepDaoConfig.initIdentityScope(type);

        dBSlotDaoConfig = daoConfigMap.get(DBSlotDao.class).clone();
        dBSlotDaoConfig.initIdentityScope(type);

        dBBrewHistoryDaoConfig = daoConfigMap.get(DBBrewHistoryDao.class).clone();
        dBBrewHistoryDaoConfig.initIdentityScope(type);

        dBRecipeDao = new DBRecipeDao(dBRecipeDaoConfig, this);
        dBBrewStepDao = new DBBrewStepDao(dBBrewStepDaoConfig, this);
        dBSlotDao = new DBSlotDao(dBSlotDaoConfig, this);
        dBBrewHistoryDao = new DBBrewHistoryDao(dBBrewHistoryDaoConfig, this);

        registerDao(DBRecipe.class, dBRecipeDao);
        registerDao(DBBrewStep.class, dBBrewStepDao);
        registerDao(DBSlot.class, dBSlotDao);
        registerDao(DBBrewHistory.class, dBBrewHistoryDao);
    }
    
    public void clear() {
        dBRecipeDaoConfig.getIdentityScope().clear();
        dBBrewStepDaoConfig.getIdentityScope().clear();
        dBSlotDaoConfig.getIdentityScope().clear();
        dBBrewHistoryDaoConfig.getIdentityScope().clear();
    }

    public DBRecipeDao getDBRecipeDao() {
        return dBRecipeDao;
    }

    public DBBrewStepDao getDBBrewStepDao() {
        return dBBrewStepDao;
    }

    public DBSlotDao getDBSlotDao() {
        return dBSlotDao;
    }

    public DBBrewHistoryDao getDBBrewHistoryDao() {
        return dBBrewHistoryDao;
    }

}
